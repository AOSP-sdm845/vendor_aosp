bootstrap_go_package {
    name: "soong-aosp",
    pkgPath: "aosp/soong/android",
    srcs: [
        "android/variable.go",
    ],
}

bootstrap_go_package {
    name: "soong-custom-generator",
    pkgPath: "aosp/soong/generator",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
        "soong-shared",
    ],
    srcs: [
        "generator/generator.go",
        "generator/variables.go",
    ],
    pluginFor: ["soong_build"],
}

custom_generator {
    name: "generated_kernel_includes",

    // The headers make command
    cmd: "$(PATH_OVERRIDE_SOONG) $(KERNEL_MAKE_CMD) $(KERNEL_MAKE_FLAGS) -C $(TARGET_KERNEL_SOURCE) O=$(KERNEL_BUILD_OUT_PREFIX)$(genDir) ARCH=$(KERNEL_ARCH) $(KERNEL_CROSS_COMPILE) headers_install",

    // Directories that can be imported by a cc_* module generated_headers property
    export_include_dirs: ["usr/include", "usr/techpack/audio/include", "usr/audio/include/uapi"],

    // Sources for dependency tracking
    dep_root: "$(TARGET_KERNEL_SOURCE)",
    dep_files: [ "Makefile", "include/**/*", "arch/$(KERNEL_ARCH)/include/**/*", "techpack/audio/include/**/*"],
}

cc_library_headers {
    name: "generated_kernel_headers",
    generated_headers: ["generated_kernel_includes"],
    export_generated_headers: ["generated_kernel_includes"],
    vendor_available: true,
    recovery_available: true,
}

soong_config_module_type {
    name: "camera_override_format_from_reserved",
    module_type: "cc_defaults",
    config_namespace: "customVarsPlugin",
    bool_variables: ["camera_override_format_from_reserved"],
    properties: ["cppflags"],
}

camera_override_format_from_reserved {
    name: "camera_override_format_from_reserved_defaults",
    soong_config_variables: {
        camera_override_format_from_reserved: {
            cppflags: ["-DTARGET_CAMERA_OVERRIDE_FORMAT_FROM_RESERVED"],
        },
    },
}

soong_config_module_type {
    name: "gralloc_10_usage_bits",
    module_type: "cc_defaults",
    config_namespace: "customVarsPlugin",
    value_variables: ["additional_gralloc_10_usage_bits"],
    properties: ["cppflags"],
}

gralloc_10_usage_bits {
    name: "gralloc_10_usage_bits_defaults",
    soong_config_variables: {
        additional_gralloc_10_usage_bits: {
            cppflags: ["-DADDNL_GRALLOC_10_USAGE_BITS=%s"],
        },
    },
}

soong_config_module_type {
    name: "gralloc_handle_custom_content_md_reserved_size",
    module_type: "cc_defaults",
    config_namespace: "customVarsPlugin",
    bool_variables: ["gralloc_handle_has_custom_content_md_reserved_size"],
    properties: ["export_cflags"],
}

gralloc_handle_custom_content_md_reserved_size {
    name: "gralloc_handle_has_custom_content_md_reserved_size_defaults",
    soong_config_variables: {
        gralloc_handle_has_custom_content_md_reserved_size: {
            export_cflags: ["-DGRALLOC_HANDLE_HAS_CUSTOM_CONTENT_MD_RESERVED_SIZE"],
        },
    },
}

soong_config_module_type {
    name: "gralloc_handle_reserved_size",
    module_type: "cc_defaults",
    config_namespace: "customVarsPlugin",
    bool_variables: ["gralloc_handle_has_reserved_size"],
    properties: ["export_cflags"],
}

gralloc_handle_reserved_size {
    name: "gralloc_handle_has_reserved_size_defaults",
    soong_config_variables: {
        gralloc_handle_has_reserved_size: {
            export_cflags: ["-DGRALLOC_HANDLE_HAS_RESERVED_SIZE"],
        },
    },
}

soong_config_module_type {
    name: "egl_display_array",
    module_type: "cc_defaults",
    config_namespace: "customVarsPlugin",
    bool_variables: ["uses_egl_display_array"],
    properties: ["cflags"],
}

egl_display_array {
    name: "egl_display_array_defaults",
    soong_config_variables: {
        uses_egl_display_array: {
            cflags: ["-DEGL_DISPLAY_ARRAY"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_qcom_extensions",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    value_variables: ["qcom_display_headers_namespace"],
    properties: [
        "cppflags",
        "header_libs",
    ],
}

surfaceflinger_qcom_extensions {
    name: "surfaceflinger_qcom_ext_defaults",
    soong_config_variables: {
        qcom_display_headers_namespace: {
            cppflags: ["-DQCOM_UM_FAMILY"],
            header_libs: ["//%s:display_intf_headers"],
        },
    },
}
